(self.webpackChunkeditor_demo=self.webpackChunkeditor_demo||[]).push([[4401],{44401:e=>{e.exports="import {AsyncPipe} from '@angular/common';\nimport {ChangeDetectionStrategy, Component, inject, ViewChild} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {TuiLoaderModule} from '@taiga-ui/core';\nimport type {TuiEditorAttachedFile} from '@tinkoff/tui-editor';\nimport {\n    TUI_ATTACH_FILES_LOADER,\n    TUI_EDITOR_EXTENSIONS,\n    TuiEditorComponent,\n    TuiEditorSocketComponent,\n    TuiEditorTool,\n} from '@tinkoff/tui-editor';\n\nimport {fileLoader} from './file-loader';\nimport {FileIoService} from './filesio.service';\n\n@Component({\n    standalone: true,\n    imports: [\n        TuiLoaderModule,\n        AsyncPipe,\n        ReactiveFormsModule,\n        TuiEditorComponent,\n        TuiEditorSocketComponent,\n    ],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_EDITOR_EXTENSIONS,\n            useValue: [\n                import('@tinkoff/tui-editor').then(({TuiStarterKit}) => TuiStarterKit),\n                import('@tiptap/extension-text-style').then(({TextStyle}) => TextStyle),\n                import('@tinkoff/tui-editor').then(({TuiLink}) => TuiLink),\n                import('@tinkoff/tui-editor').then(({TuiJumpAnchor}) => TuiJumpAnchor),\n                import('@tinkoff/tui-editor').then(({TuiFileLink}) => TuiFileLink),\n            ],\n        },\n        {\n            provide: TUI_ATTACH_FILES_LOADER,\n            deps: [FileIoService],\n            useFactory: fileLoader,\n        },\n    ],\n})\nexport default class ExampleComponent {\n    @ViewChild(TuiEditorComponent)\n    private readonly wysiwyg?: TuiEditorComponent;\n\n    protected readonly fileIoService = inject(FileIoService);\n\n    protected readonly builtInTools = [\n        TuiEditorTool.Undo,\n        TuiEditorTool.Link,\n        TuiEditorTool.Attach,\n    ];\n\n    protected control = new FormControl('');\n\n    /**\n     * @note: attach file as a link\n     * you can also implement your own file mapping mechanism\n     * because you have all the necessary data for this\n     */\n    protected attach(files: TuiEditorAttachedFile[]): void {\n        files.forEach(file => this.wysiwyg?.editor?.setFileLink(file));\n    }\n}\n"}}]);