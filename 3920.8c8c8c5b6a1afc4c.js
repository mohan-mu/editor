(self.webpackChunkeditor_demo=self.webpackChunkeditor_demo||[]).push([[3920],{93920:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var o=n(89768),s=n(12589),a=n(26624),c=n(20755),d=n(24124),p=n(41071);const i=(()=>{var e;class t{constructor(){this.component1=n.e(3103).then(n.bind(n,3103)),this.example1={TypeScript:n.e(961).then(n.t.bind(n,60961,17)),HTML:n.e(5255).then(n.t.bind(n,25255,17))}}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=c.Xpm({type:e,selectors:[["ng-component"]],standalone:!0,features:[c._Bn([{provide:a.TUI_EDITOR_EXTENSIONS,useValue:a.TUI_EDITOR_DEFAULT_EXTENSIONS}]),c.jDz],decls:2,vars:2,consts:[["header","Editor","type","components"],["id","anchors","description","The Focus extension adds a CSS class to focused nodes. By default it adds .has-focus, but you can change that. Note that it’s only a class, the styling is totally up to you. The usage example below has some CSS for that class.","heading","Focus",3,"component","content"]],template:function(e,t){1&e&&(c.TgZ(0,"tui-doc-page",0),c._UZ(1,"tui-doc-example",1),c.qZA()),2&e&&(c.xp6(1),c.Q6J("component",t.component1)("content",t.example1))},dependencies:[o.u4,d.f,s.jzK,o.Lq,p.q],encapsulation:2,changeDetection:0}),t})()}}]);